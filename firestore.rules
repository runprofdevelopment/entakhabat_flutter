rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      // Allow users to read and write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow owner to read, update, and delete any user document
      allow read, update, delete: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.accountType == 'owner';

      // Allow admin to read, update, and delete collectors in their assigned areas
      allow read, update, delete: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.accountType == 'admin' &&
        resource.data.accountType == 'collector' &&
        (resource.data.assignedAreas.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedAreas));
    }

    // Custom Areas collection rules
    match /customAreas/{areaId} {
      // Allow authenticated users to read all custom areas
      allow read: if request.auth != null;
      
      // Allow authenticated users to create, update, and delete custom areas
      allow create, update, delete: if request.auth != null;
    }

    // National IDs collection rules - allow authenticated users to create, but not overwrite, documents
    match /nationalIDs/{documentId} {
      // Allow authenticated users to create a new document if it does not exist
      allow create: if request.auth != null && !exists(/databases/$(database)/documents/nationalIDs/$(documentId));
      // Allow users to read their own submissions
      allow read: if request.auth != null && resource.data.collectorId == request.auth.uid;
      // Allow admins to read all submissions
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.accountType == 'admin';
    }
    
    // Allow authenticated users to read other collections
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
} 